{"version":3,"sources":["component/about/About.js","utils/service.js","component/login/login.js","component/watchComponent/WatchComponent.js","component/home/Home.js","component/Bio/Bio.js","component/timeLine/TimeLine.js","component/gituser.js","App.js","serviceWorker.js","index.js"],"names":["About","defaultOption","timeout","url","method","requestApi","options","finalOptions","Object","assign","axiosInstance","axios","catch","error","response","status","console","log","debounce","require","LoginUser","props","getValue","value","requestOption","then","res","data","setState","userList","items","state","username","email","isFocused","gitUser","changeValue","bind","submitLogin","focusOut","focusIn","clearSearch","e","name","target","this","length","login","userError","focusedClass","trim","to","Box","display","justifyContent","Card","className","boxShadow","onSubmit","htmlFor","id","type","onChange","autoComplete","onBlur","onFocus","Fade","in","IconButton","size","onClick","fontSize","List","component","aria-label","map","item","index","ListItem","button","divider","key","ListItemAvatar","Avatar","alt","src","avatar_url","ListItemText","primary","Component","perc2color","perc","toString","join","WatchComponent","timer","hr","minute","second","setInterval","time","Date","getHours","getMinutes","getSeconds","style","CircularProgress","variant","color","Home","useState","Snackbar","open","autoHideDuration","Paper","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","palette","text","secondary","Bio","userName","loading","user","bioData","setBio","loadImage","randomNumber","Math","floor","random","useEffect","Container","maxWidth","CardMedia","height","image","onError","title","Typography","CardContent","paragraph","bio","Chip","public_repos","following","public_gists","followers","TimeLine","repos","setRepo","chartData","setChartData","setLoader","pageCount","getRepos","count","totalRes","requestRepos","result","sort","a","b","adate","created_at","bdate","getTime","push","resultData","chartObject","itemYear","getFullYear","day","values","createChartObject","CardActionArea","margin","top","right","bottom","left","dataKey","tick","stroke","axisLine","strokeWidth","tickLine","itemStyle","contentStyle","strokeDasharray","GitUser","match","params","resultLoaded","Grid","container","xs","App","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.62a0dc11.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            About page\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nconst defaultOption = {\r\n    timeout: 1000 * 20,\r\n    url: '',\r\n    method: \"GET\",\r\n\r\n};\r\nexport const requestApi = function (options) {\r\n    let finalOptions = Object.assign({}, defaultOption, options);\r\n\r\n    let axiosInstance = axios(finalOptions);\r\n    axiosInstance.catch(error => {\r\n\r\n        if (error && error.response && error.response.status === 401) {\r\n            //window.location.reload();\r\n            console.log(\"error \", error);\r\n        }\r\n    });\r\n    //axios.cancel(requestId);\r\n    return axiosInstance;\r\n};\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { requestApi } from \"../../utils/service\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Box from '@material-ui/core/Box';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './login.scss';\r\n\r\n\r\n\r\nconst debounce = require('lodash.debounce');\r\n\r\n\r\nclass LoginUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      userList: [],\r\n      isFocused: false,\r\n      gitUser: \"\"\r\n    };\r\n    this.changeValue = this.changeValue.bind(this);\r\n    this.submitLogin = this.submitLogin.bind(this);\r\n    this.getValue = this.getValue.bind(this);\r\n    this.focusOut = this.focusOut.bind(this);\r\n    this.focusIn = this.focusIn.bind(this);\r\n    this.clearSearch = this.clearSearch.bind(this);\r\n  }\r\n  changeValue(e) {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    if (value.length > 3) {\r\n      this.getValue(value);\r\n    } else {\r\n      this.setState({\r\n        userList: []\r\n      })\r\n    }\r\n\r\n  }\r\n  clearSearch() {\r\n    this.setState({\r\n      username: \"\",\r\n      userList: []\r\n    })\r\n  }\r\n  focusOut() {\r\n    this.setState({\r\n      isFocused: false\r\n    })\r\n  }\r\n  focusIn() {\r\n    this.setState({\r\n      isFocused: true\r\n    })\r\n  }\r\n  getValue = debounce(value => {\r\n    console.log(value);\r\n    let requestOption = {\r\n      url: `https://api.github.com/search/users?q=${value}`,\r\n      method: 'GET'\r\n    }\r\n\r\n    requestApi(requestOption).then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        userList: res.data.items\r\n      })\r\n    })\r\n  }, 500)\r\n  submitLogin(login) {\r\n    // this.props.submitLogin(login);\r\n    console.log(\"login\", login);\r\n\r\n    this.setState({\r\n      gitUser: login\r\n    })\r\n  }\r\n  render() {\r\n    let userError = this.props.userError;\r\n    let { userList } = this.state;\r\n    let focusedClass = this.state.isFocused || this.state.username.trim().length > 0 ? \"isFocused\" : \"\"\r\n    if (this.state.gitUser) {\r\n      return <Redirect to={`/${this.state.gitUser}`} />\r\n    }\r\n    return (\r\n\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        <Card className=\"loginForm\" boxShadow={3}>\r\n          <h1 className=\"text-center\">Github Timeline</h1>\r\n          <div className=\"login-page\">\r\n            <div className=\"form\">\r\n              <form className=\"login-form\" onSubmit={this.submitLogin}>\r\n                <h3>Provide username to view repositories</h3>\r\n                {userError !== \"\" ? (\r\n                  <span className=\"error\">{this.props.userError}</span>\r\n                ) : (\r\n                    \"\"\r\n                  )}\r\n                <div className={`textField ${focusedClass}`}>\r\n                  <label htmlFor=\"username\">username</label>\r\n                  <input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.changeValue}\r\n                    autoComplete=\"off\"\r\n                    onBlur={this.focusOut}\r\n                    onFocus={this.focusIn}\r\n                  />\r\n                  {/* {this.state.username.trim().length > 0 && ( */}\r\n                  <Fade in={this.state.username.trim().length > 0}>\r\n                    <IconButton size=\"small\" onClick={this.clearSearch}>\r\n                      <ClearIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </Fade>\r\n                  {/* )} */}\r\n                </div>\r\n                {userList.length > 0 && <List component=\"nav\" className=\"overflowScroll\" aria-label=\"main mailbox folders\">\r\n                  {userList.map((item, index) => {\r\n\r\n                    return (\r\n                      <ListItem button divider onClick={(e) => this.submitLogin(item.login)} key={item.login}>\r\n                        <ListItemAvatar>\r\n                          <Avatar alt=\"Travis Howard\" src={item.avatar_url} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={item.login} />\r\n                      </ListItem>)\r\n                  })}\r\n                </List>}\r\n                {/* <input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              name=\"username\"\r\n              value={this.state.name}\r\n              onChange={this.changeValue}\r\n            /> */}\r\n                {/* <input\r\n              type=\"text\"\r\n              placeholder=\"email\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.changeValue}\r\n            /> */}\r\n                {/* <button disabled={disabled}>Submit</button> */}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Card></Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginUser;\r\n","import React, { Component } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction perc2color(perc) {\r\n    perc = perc / 100;\r\n    var hue = ((1 - perc) * 120).toString(10);\r\n    return [\"hsl(\", hue, \",100%,50%)\"].join(\"\");\r\n}\r\nexport default class WatchComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: \"timer Text\",\r\n            hr: 0,\r\n            minute: 0,\r\n            second: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            let time = new Date();\r\n            this.setState({\r\n                hr: (time.getHours() / 24) * 100,\r\n                minute: (time.getMinutes() / 60) * 100,\r\n                second: (time.getSeconds() / 60) * 100,\r\n                timer: `${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"clockContainer\">\r\n                <div className=\"displayTime\">{this.state.timer}</div>\r\n                <div style={{ \"color\": `${perc2color(this.state.hr)}` }}>\r\n                    <CircularProgress variant=\"static\" value={this.state.hr} size=\"3rem\" color=\"inherit\" />\r\n                </div>\r\n                <div style={{ \"color\": `${perc2color(this.state.minute)}` }}>\r\n                    <CircularProgress variant=\"static\" value={this.state.minute} size=\"3.5rem\" color=\"inherit\" />\r\n                </div>\r\n                <div style={{ \"color\": `${perc2color(this.state.second)}` }}>\r\n                    <CircularProgress variant=\"static\" value={this.state.second} size=\"4rem\" color=\"inherit\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport LoginUser from \"./../login/login\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport WatchComponent from \"./../watchComponent/WatchComponent\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport default function Home() {\r\n    const [isLogged, login] = useState(true);\r\n    const [repo, setRepo] = useState([]);\r\n    const [userError, setError] = useState(\"\");\r\n    const [userName, setUserName] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={true} className=\"MuiSnackbar-anchorOriginTopLeft customTop\" autoHideDuration={null}>\r\n                <Paper><WatchComponent></WatchComponent></Paper>\r\n            </Snackbar>\r\n            <LoginUser />\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { requestApi } from \"../../utils/service\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport \"./Bio.scss\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n/**\r\n * \r\n * @param {*username} param0 \r\n * {\r\n        \"login\": \"nabaraj\",\r\n        \"id\": 270182,\r\n        \"node_id\": \"MDQ6VXNlcjI3MDE4Mg==\",\r\n        \"avatar_url\": \"https://avatars2.githubusercontent.com/u/270182?v=4\",\r\n        \"gravatar_id\": \"\",\r\n        \"url\": \"https://api.github.com/users/nabaraj\",\r\n        \"html_url\": \"https://github.com/nabaraj\",\r\n        \"followers_url\": \"https://api.github.com/users/nabaraj/followers\",\r\n        \"following_url\": \"https://api.github.com/users/nabaraj/following{/other_user}\",\r\n        \"gists_url\": \"https://api.github.com/users/nabaraj/gists{/gist_id}\",\r\n        \"starred_url\": \"https://api.github.com/users/nabaraj/starred{/owner}{/repo}\",\r\n        \"subscriptions_url\": \"https://api.github.com/users/nabaraj/subscriptions\",\r\n        \"organizations_url\": \"https://api.github.com/users/nabaraj/orgs\",\r\n        \"repos_url\": \"https://api.github.com/users/nabaraj/repos\",\r\n        \"events_url\": \"https://api.github.com/users/nabaraj/events{/privacy}\",\r\n        \"received_events_url\": \"https://api.github.com/users/nabaraj/received_events\",\r\n        \"type\": \"User\",\r\n        \"site_admin\": false,\r\n        \"name\": \"Nabaraj saha\",\r\n        \"company\": null,\r\n        \"blog\": \"\",\r\n        \"location\": null,\r\n        \"email\": null,\r\n        \"hireable\": true,\r\n        \"bio\": \"I am a Front End Developer, having 8 years of experience with skills Javascript, Reactjs, angularjs, NodeJS, jQuery, Html, CSS, responsive web design.\",\r\n        \"public_repos\": 60,\r\n        \"public_gists\": 2,\r\n        \"followers\": 3,\r\n        \"following\": 11,\r\n        \"created_at\": \"2010-05-07T06:47:52Z\",\r\n        \"updated_at\": \"2020-04-28T13:49:29Z\"\r\n    }\r\n */\r\nexport default function Bio({ userName }) {\r\n    const [bioData, setBio] = useState({\r\n        loading: false,\r\n        user: null\r\n    });\r\n    // const [loading, setLoader] = useState(true)\r\n    const classes = useStyles();\r\n    const loadImage = () => {\r\n        let randomNumber = Math.floor(Math.random() * 999) + 1;\r\n        let dummysrc = `https://i.picsum.photos/id/${randomNumber}/1200/400.jpg`;\r\n        return dummysrc;\r\n    }\r\n    useEffect(() => {\r\n        // setLoader(true);\r\n        setBio({ loading: true })\r\n        let requestOption = {\r\n            url: `https://api.github.com/users/${userName}`,\r\n            method: 'GET'\r\n        }\r\n        requestApi(requestOption).then(res => {\r\n            console.log('bio ', res.data);\r\n            // setLoader(false)\r\n            setBio({ user: res.data })\r\n        })\r\n    }, [])\r\n    const { loading, user } = bioData;\r\n    return (\r\n        // { loading?<CircularProgress /> : \r\n        (<Container maxWidth=\"md\">\r\n            <Card>\r\n                {loading && <CircularProgress />}\r\n                {user &&\r\n                    <>\r\n                        <div className=\"mediaContent\">\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image={loadImage()}\r\n                                onError={loadImage()}\r\n                                title=\"Header\"\r\n                            />\r\n                            <div className=\"blurBg\">\r\n\r\n                                <div className=\"bioHeaderContainer\">\r\n                                    <Avatar alt=\"Remy Sharp\" className=\"MuiAvatar-rounded\" src={user.avatar_url} />\r\n                                    <Typography variant=\"h5\" color=\"textSecondary\" component=\"h5\">\r\n                                        {user.name}\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <CardContent>\r\n                            <Typography paragraph variant=\"p\" color=\"textSecondary\" component=\"p\"></Typography>\r\n                            <Typography paragraph variant=\"p\" color=\"textSecondary\" component=\"p\">\r\n                                {user.bio}\r\n                            </Typography>\r\n                            <div className=\"header-chips\">\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    className=\"MuiChip-rounded\"\r\n                                    size=\"small\"\r\n                                    avatar={<Avatar className=\"MuiAvatar-rounded\">{user.public_repos}</Avatar>}\r\n                                    label=\"Public Repos\"\r\n\r\n                                />\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    className=\"MuiChip-rounded\"\r\n                                    size=\"small\"\r\n                                    avatar={<Avatar className=\"MuiAvatar-rounded\">{user.following}</Avatar>}\r\n                                    label=\"Following\"\r\n\r\n                                />\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    className=\"MuiChip-rounded\"\r\n                                    size=\"small\"\r\n                                    avatar={<Avatar className=\"MuiAvatar-rounded\">{user.public_gists}</Avatar>}\r\n                                    label=\"Public Gists\"\r\n\r\n                                />\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    className=\"MuiChip-rounded\"\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    avatar={<Avatar className=\"MuiAvatar-rounded\">{user.followers}</Avatar>}\r\n                                    label=\"Followers\"\r\n\r\n                                    boxShadow={3}\r\n                                />\r\n\r\n                            </div>\r\n                        </CardContent>\r\n                    </>\r\n                }\r\n\r\n            </Card>\r\n\r\n        </Container>)\r\n\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport \"./timeLine.scss\"\r\nimport { useEffect, useState } from 'react';\r\nimport { requestApi } from \"./../../utils/service\";\r\n// import Card from '@material-ui/core/Card';\r\n// import CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport { Typography, CardContent, CardActionArea, Card } from '@material-ui/core';\r\n\r\nimport {\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Line,\r\n    XAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    AreaChart,\r\n    Legend,\r\n    Text\r\n} from \"recharts\";\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport default function TimeLine({ type, userName, className }) {\r\n    const [repos, setRepo] = useState([]);\r\n    const [chartData, setChartData] = useState([]);\r\n    const [loading, setLoader] = useState(false);\r\n\r\n    console.log(userName);\r\n    let pageCount = 1;\r\n    useEffect(() => {\r\n        setLoader(true)\r\n        getRepos(userName, pageCount, []);\r\n    }, []);\r\n\r\n    const createChartObject = (resultData) => {\r\n        setRepo(resultData);\r\n        let chartObject = {};\r\n        resultData.map(item => {\r\n            let itemYear = new Date(item.created_at).getFullYear();\r\n            if (!chartObject[itemYear])\r\n                chartObject[itemYear] = { day: itemYear, count: 0 };\r\n            chartObject[itemYear][\"count\"]++;\r\n        });\r\n\r\n        // let oldChartData = [chartData, ...Object.values(chartObject)];\r\n        setLoader(false);\r\n        setChartData(Object.values(chartObject));\r\n\r\n    }\r\n    const getRepos = (userName, count, totalRes) => {\r\n\r\n        let requestRepos = {\r\n            url: `https://api.github.com/users/${userName}/repos?page=${count}`,\r\n            method: 'GET'\r\n\r\n        }\r\n        requestApi(requestRepos).then(result => {\r\n\r\n            // console.log(\"ree\", result.data);\r\n            let resultData = result.data;\r\n            if (resultData.length > 0) {\r\n                let data = result.data.sort((a, b) => {\r\n\r\n                    var adate = new Date(a.created_at);\r\n                    var bdate = new Date(b.created_at);\r\n\r\n                    return adate.getTime() - bdate.getTime();\r\n                });\r\n                console.log(\"data \", data);\r\n                totalRes.push(...data);\r\n\r\n\r\n                pageCount++;\r\n                getRepos(userName, pageCount, totalRes);\r\n            } else {\r\n                setRepo(totalRes)\r\n                createChartObject(totalRes);\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <Card>\r\n            {!loading && <CardActionArea>\r\n                <div className={`line-chart-wrapper ${className}`}>\r\n                    <ResponsiveContainer>\r\n                        <LineChart\r\n                            data={chartData}\r\n                            margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n                        >\r\n                            <XAxis\r\n                                dataKey=\"day\"\r\n                                tick={{ stroke: '#ffffff' }}\r\n                                axisLine={{ stroke: \"#ffffff\", strokeWidth: 1 }}\r\n                                tickLine={{ stroke: \"#ffffff\", strokeWidth: 1 }}\r\n                            />\r\n                            <Tooltip\r\n                                itemStyle={{ color: '#ffffff' }}\r\n                                contentStyle={{ 'background-color': 'rgba(00,00,00,0.8)' }}\r\n                            />\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <Line\r\n                                name=\"Total Repo\"\r\n                                type=\"monotone\"\r\n                                dataKey=\"count\"\r\n                                stroke=\"#ffffff\"\r\n                                strokeWidth={4}\r\n\r\n                            />\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            </CardActionArea>}\r\n            <CardContent>\r\n\r\n                {loading ?\r\n                    <CircularProgress></CircularProgress> :\r\n                    <><Typography variant=\"h5\" color=\"textSecondary\" component=\"h5\">\r\n                        <TimelineIcon /> Timeline\r\n                                    </Typography>\r\n                        <p>Total {repos.length} repos</p></>\r\n                }\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Bio from \"./Bio/Bio\";\r\nimport TimeLine from \"./timeLine/TimeLine\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport Container from '@material-ui/core/Container';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\n\r\n// import CardActions from '@material-ui/core/CardActions';\r\n\r\n\r\n\r\n\r\nfunction GitUser(props) {\r\n  let userName = props.match.params.userName;\r\n  const [resultLoaded, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // if (!resultLoaded) {\r\n    //   setLoader(true);\r\n    // }\r\n  }, [resultLoaded]);\r\n  const genarateDate = dateValue => {\r\n    var date = new Date(dateValue);\r\n    return (\r\n      <span className=\"time\">\r\n        {date.getFullYear()} -{\" \"}\r\n        {date.toLocaleString(\"default\", { month: \"long\" })}\r\n      </span>\r\n    );\r\n  };\r\n  return (\r\n\r\n    <div>\r\n      <Bio userName={userName}></Bio>\r\n\r\n      <Container maxWidth=\"md\" className=\"mt12\">\r\n        <Grid container spacing={3}>\r\n\r\n          <Grid item xs>\r\n\r\n            <TimeLine\r\n              type=\"Line\"\r\n              className=\"greenBG\"\r\n              userName={userName}\r\n            />\r\n\r\n          </Grid>\r\n          {/* <Grid item xs>\r\n            <Paper>\r\n              <TimeLine\r\n                type=\"Area\"\r\n                className=\"greenBG\"\r\n                userName={userName}\r\n              />\r\n            </Paper>\r\n          </Grid> */}\r\n        </Grid>\r\n      </Container>\r\n      {/* <ul className=\"timeline\">\r\n        {props.repo.map((item, index) => (\r\n          <li key={item.id}>\r\n            <div\r\n              className={`${\r\n                index === 0 || index % 2 === 0 ? \"direction-r\" : \"direction-l\"\r\n                }`}\r\n            >\r\n              <div className=\"flag-wrapper\">\r\n                <span className=\"flag\">\r\n                  <a href={item.html_url} target=\"_blank\">\r\n                    {item.name}\r\n                  </a>\r\n                </span>\r\n                <span className=\"time-wrapper\">\r\n                  {genarateDate(item.created_at)}\r\n                </span>\r\n              </div>\r\n              <div className=\"desc\">{item.description}</div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GitUser;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport About from \"./component/about/About\";\r\nimport Home from \"./component/home/Home\";\r\nimport GitUser from \"./component/gituser\";\r\n\r\nimport \"./App.scss\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/about\" component={About}>\r\n        </Route>\r\n        <Route path=\"/:userName\" component={GitUser}>\r\n        </Route>\r\n        <Route path=\"/\" component={Home}>\r\n\r\n        </Route>\r\n      </Switch>\r\n\r\n    </Router>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}