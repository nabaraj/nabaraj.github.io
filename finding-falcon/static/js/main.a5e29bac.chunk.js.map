{"version":3,"sources":["actions/types.js","service/request.js","actions/getDataAction.js","components/PlanetsSelect.js","components/VehicleSelect.js","components/FilterBox.js","components/AppContainer.js","components/Notification.js","components/Header.js","App.js","reducer/planeteReducer.js","reducer/index.js","store/store.js","index.js"],"names":["STORE_PLANETS_DATA","STORE_VEHICLE_DATA","SHOW_NOTIFICATION","RESET_APP","GOT_RESULT","defaultOption","method","requestApi","options","finalOptions","Object","assign","axiosInstance","axios","catch","error","response","status","getPlanetesData","dispatch","url","then","result","type","payload","data","displayNotification","console","log","getVehcleData","clearTimeout","timer","setTimeout","resetAppFn","submitResult","trackObject","headers","Accept","planet_names","vehicle_names","keys","map","item","index","push","planetName","vehicleName","postFindOption","token","PlanetsSelect","props","state","filteredPlanets","selectedValue","filterPlanets","bind","clearSelect","displayValue","removeSelect","node","React","createRef","document","addEventListener","this","removeEventListener","nextProps","resetApp","setState","e","inputText","target","value","planetsArr","filter","name","toLowerCase","includes","filterItem","current","contains","itemIndex","selectPlanete","parentIndex","planetValue","className","ref","onClick","list","onChange","placeholder","autocomplete","length","key","disabled","orgIndex","Component","VehicleSelect","vehicleArr","checked","radioId","split","join","parseInt","vehicle","vehicleChecked","selectVehicle","total_no","id","htmlFor","FilterBox","AppContainer","distance","total","columnCount","renderFilter","calculateDistance","renderResult","JSON","parse","stringify","flattenArr","vehicleArrIndex","currentIndex","indexArr","oldVehicleIndex","max_distance","appGrid","i","counter","distanceTotal","planet","vehicleSpeed","speed","planetDistance","Fragment","planet_name","connect","appsData","bindActionCreators","Notification","position","notification","Header","href","notificationObject","App","initialData","mixObject","appReducer","action","types","totalReducer","combineReducers","rootReducer","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a5e29bac.chunk.js","sourcesContent":["export const STORE_PLANETS_DATA = \"STORE_PLANETS_DATA\";\nexport const STORE_VEHICLE_DATA = \"STORE_VEHICLE_DATA\";\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const RESET_APP = \"RESET_APP\";\nexport const GOT_RESULT = \"GOT_RESULT\";\n","\nimport axios from 'axios';\nconst defaultOption = {\n    //timeout:1000*20,\n    method: \"POST\"\n  };\nexport const requestApi = function(options) {\n    let finalOptions = Object.assign({}, defaultOption, options);\n    let axiosInstance = axios(finalOptions);\n    axiosInstance.catch(error => {\n      if (error && error.response && error.response.status === 401) {\n        //window.location.reload();\n        \n      }\n    });\n    //axios.cancel(requestId);\n    return axiosInstance;\n  };","import {\n  STORE_PLANETS_DATA,\n  STORE_VEHICLE_DATA,\n  SHOW_NOTIFICATION,\n  RESET_APP,\n  GOT_RESULT\n} from \"./types\";\nimport { requestApi } from \"./../service/request\";\n\nexport function getPlanetesData() {\n  return dispatch => {\n    let options = {\n      method: \"GET\",\n      url: \"https://findfalcone.herokuapp.com/planets\"\n    };\n    requestApi(options)\n      .then(result => {\n        dispatch({ type: STORE_PLANETS_DATA, payload: result.data });\n      })\n      .catch(error => {\n        this.displayNotification(\"Please try agin letter\");\n        console.log(error);\n      });\n  };\n}\nexport function getVehcleData() {\n  return dispatch => {\n    let options = {\n      method: \"GET\",\n      url: \"https://findfalcone.herokuapp.com/vehicles\"\n    };\n    requestApi(options)\n      .then(result => {\n        dispatch({ type: STORE_VEHICLE_DATA, payload: result.data });\n      })\n      .catch(error => {\n        this.displayNotification(\"Please try agin letter\");\n        console.log(error);\n      });\n  };\n}\nexport function displayNotification(data) {\n  return dispatch => {\n    let timer;\n    clearTimeout(timer);\n    dispatch({ type: SHOW_NOTIFICATION, payload: data });\n\n    setTimeout(() => {\n      dispatch({ type: SHOW_NOTIFICATION, payload: \"\" });\n    }, 3000);\n  };\n}\nexport function resetAppFn(data) {\n  return dispatch => {\n    dispatch({ type: RESET_APP, payload: data });\n  };\n}\n//first getting token and onsuccess sending game results\nexport function submitResult(trackObject) {\n  return dispatch => {\n    let tokenOption = {\n      url: \"https://findfalcone.herokuapp.com/token\",\n      method: \"POST\",\n      headers: { Accept: \"application/json\" }\n    };\n    requestApi(tokenOption).then(result => {\n      let planet_names = [],\n        vehicle_names = [];\n      Object.keys(trackObject).map((item, index) => {\n        planet_names.push(trackObject[item].planetName);\n        vehicle_names.push(trackObject[item].vehicleName);\n      });\n      let postFindOption = {\n        url: \"https://findfalcone.herokuapp.com/find\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        data: {\n          token: result.data.token,\n          planet_names,\n          vehicle_names\n        }\n      };\n      requestApi(postFindOption).then(result => {\n        dispatch({ type: GOT_RESULT, payload: result.data });\n      });\n    });\n  };\n}\n","import React, { Component, useRef } from \"react\";\n\nclass PlanetsSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredPlanets: [],\n      selectedValue: \"\"\n    };\n    this.filterPlanets = this.filterPlanets.bind(this);\n    this.clearSelect = this.clearSelect.bind(this);\n    this.displayValue = this.displayValue.bind(this);\n    this.removeSelect = this.removeSelect.bind(this);\n    //this.node = useRef();\n    this.node = React.createRef();\n  }\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.clearSelect);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.clearSelect);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.resetApp) {\n      this.setState({\n        filteredPlanets: [],\n        selectedValue: \"\"\n      });\n    }\n  }\n  filterPlanets(e) {\n    let inputText = e.target.value;\n    let filteredPlanets = this.props.planetsArr.filter((item, index) => {\n      if (item.name.toLowerCase().includes(inputText)) {\n        let filterItem = item;\n        filterItem[\"orgIndex\"] = index;\n        return filterItem;\n      }\n    });\n    this.setState({\n      filteredPlanets\n    });\n  }\n  clearSelect(e) {\n    if (!this.node.current.contains(e.target)) {\n      this.setState({\n        filteredPlanets: []\n      });\n    }\n  }\n  displayValue(value, itemIndex) {\n    this.setState({\n      selectedValue: value,\n      filteredPlanets: []\n    });\n    this.props.selectPlanete(itemIndex);\n  }\n  removeSelect() {\n    this.setState({\n      selectedValue: \"\"\n    });\n\n    this.props.selectPlanete(`-${this.props.parentIndex}`);\n  }\n  render() {\n    let { parentIndex, trackObject } = this.props;\n    let { filteredPlanets, selectedValue } = this.state;\n    let defaultValue = trackObject[parentIndex]\n      ? this.props.trackObject[parentIndex].planetValue\n      : `-${parentIndex}`;\n    return (\n      <div className=\"form-group autoComplete\" ref={this.node}>\n        {selectedValue ? (\n          <div className=\"form-control tagContainer\">\n            <span className=\"badge badge-primary\">\n              {selectedValue}\n              <span className=\"badge badge-light\" onClick={this.removeSelect}>\n                X\n              </span>\n            </span>\n          </div>\n        ) : (\n          <input\n            list=\"planetsLists\"\n            name=\"myBrowser\"\n            onChange={this.filterPlanets}\n            placeholder=\"Search Planets\"\n            className=\"form-control\"\n            autocomplete=\"off\"\n          />\n        )}\n\n        {filteredPlanets.length > 0 && (\n          <ul className=\"list-group\">\n            {filteredPlanets.map((item, index) => {\n              return (\n                <li\n                  key={`${item.name}-${index}`}\n                  value={`${item.name}`}\n                  className={`list-group-item${\n                    item.disabled ? \" disabled\" : \"\"\n                  }`}\n                  onClick={e =>\n                    this.displayValue(\n                      item.name,\n                      `${item.orgIndex}-${parentIndex}`\n                    )\n                  }\n                >\n                  {item.name}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PlanetsSelect;\n","import React, { Component } from \"react\";\n\nclass VehicleSelect extends Component {\n  render() {\n    let { vehicleArr, parentIndex, trackObject } = this.props;\n    return (\n      <div>\n        <ul className=\"list-unstyled\">\n          {vehicleArr.map((item, index) => {\n            let checked = false;\n            let radioId = `${item.name\n              .toLowerCase()\n              .split(\" \")\n              .join(\"-\")}-${parentIndex}`;\n            if (\n              index === parseInt(trackObject[parentIndex].vehicle) &&\n              trackObject[parentIndex].vehicleChecked\n            ) {\n              checked = true;\n            }\n            return (\n              <li key={item.name} className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  value={`${index}-${parentIndex}`}\n                  name={`radio-${parentIndex}`}\n                  onChange={this.props.selectVehicle}\n                  disabled={item.total_no === 0 ? true : false}\n                  id={`${radioId}`}\n                  checked={checked}\n                />\n                <label htmlFor={`${radioId}`} className=\"form-check-label\">\n                  {item.name}({item.total_no})\n                </label>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default VehicleSelect;\n","import React, { Component } from \"react\";\nimport PlanetsSelect from \"./PlanetsSelect\";\nimport VehicleSelect from \"./VehicleSelect\";\n\nclass FilterBox extends Component {\n  render() {\n    let { trackObject, parentIndex } = this.props;\n    //console.log(trackObject[parentIndex]);\n    return (\n      <div className=\"col-sm\">\n        <PlanetsSelect {...this.props}></PlanetsSelect>\n        {trackObject[parentIndex] && trackObject[parentIndex][\"planet\"] && (\n          <VehicleSelect {...this.props}></VehicleSelect>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default FilterBox;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getPlanetesData,\n  getVehcleData,\n  displayNotification,\n  resetAppFn,\n  submitResult\n} from \"./../actions/getDataAction\";\nimport { bindActionCreators } from \"redux\";\nimport FilterBox from \"./FilterBox\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vehicleArr: [],\n      planetsArr: [],\n      trackObject: {},\n      distance: { total: 0 },\n      columnCount: 4,\n      disabled: true\n    };\n    this.renderFilter = this.renderFilter.bind(this);\n    this.selectPlanete = this.selectPlanete.bind(this);\n    this.selectVehicle = this.selectVehicle.bind(this);\n    this.calculateDistance = this.calculateDistance.bind(this);\n    this.renderResult = this.renderResult.bind(this);\n  }\n  componentDidMount() {\n    this.props.getPlanetesData();\n    this.props.getVehcleData();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.planetsArr !== this.props.planetsArr) {\n      this.setState({\n        planetsArr: JSON.parse(JSON.stringify(nextProps.planetsArr))\n      });\n    }\n    if (nextProps.vehicleArr !== this.props.vehicleArr) {\n      this.setState({\n        vehicleArr: JSON.parse(JSON.stringify(nextProps.vehicleArr))\n      });\n    }\n    if (nextProps.resetApp === true) {\n      let planetsArr = JSON.parse(JSON.stringify(this.props.planetsArr));\n      let vehicleArr = JSON.parse(JSON.stringify(this.props.vehicleArr));\n      this.setState(\n        {\n          distance: { total: 0 },\n          planetsArr: planetsArr,\n          vehicleArr: vehicleArr,\n          trackObject: {}\n        },\n        () => {\n          this.calculateDistance();\n          this.props.resetAppFn(false);\n        }\n      );\n    }\n    //return null;\n  }\n  // reset vehicleArr if default value is selected\n  selectPlanete(e) {\n    let { planetsArr, vehicleArr, trackObject } = this.state;\n    let flattenArr = e.split(\"-\");\n\n    if (!trackObject[flattenArr[1]]) {\n      trackObject[flattenArr[1]] = {};\n    }\n    let vehicleArrIndex = trackObject[flattenArr[1]]\n      ? trackObject[flattenArr[1]].vehicle\n      : null;\n\n    trackObject[flattenArr[1]][\"planet\"] = flattenArr[0] ? flattenArr[0] : \"\";\n    trackObject[flattenArr[1]][\"planetName\"] = flattenArr[0]\n      ? planetsArr[flattenArr[0]].name\n      : \"\";\n\n    trackObject[flattenArr[1]][\"vehicle\"] = \"\";\n    //update vehicle index after each select planet\n    if (vehicleArrIndex) {\n      vehicleArr[vehicleArrIndex].total_no =\n        vehicleArr[vehicleArrIndex].total_no + 1 >\n        this.props.vehicleArr[vehicleArrIndex].total_no\n          ? this.props.vehicleArr[vehicleArrIndex].total_no\n          : vehicleArr[vehicleArrIndex].total_no + 1;\n    }\n    trackObject[flattenArr[1]][\"planetValue\"] = e;\n    //this.props.updateTrackerPlanet(e.target.value);\n\n    planetsArr.map((item, index) => {\n      if (index === parseInt(flattenArr[0])) {\n        item.disabled = true;\n        item.currentIndex = flattenArr[1];\n      } else {\n        if (item.currentIndex === flattenArr[1]) {\n          item.disabled = false;\n          item.currentIndex = \"\";\n        }\n      }\n      return item;\n    });\n\n    //}\n    this.setState(\n      {\n        planetsArr,\n        trackObject,\n        vehicleArr\n      },\n      this.calculateDistance\n    );\n  }\n\n  // on select vehicle update the total vahicle count in vehicleArr\n  // need to check max_distance and planet distance\n  // update trackObject vehicle and vehicleChecked\n\n  selectVehicle(e) {\n    let indexArr = e.target.value.split(\"-\");\n    let { vehicleArr, planetsArr, trackObject } = this.state;\n\n    let oldVehicleIndex = trackObject[indexArr[1]][\"vehicle\"] || \"\";\n    let max_distance = vehicleArr[indexArr[0]].max_distance;\n    let planetDistance = planetsArr[indexArr[1]].distance;\n    if (max_distance >= planetDistance) {\n      trackObject[indexArr[1]][\"vehicle\"] = indexArr[0];\n      trackObject[indexArr[1]][\"vehicleName\"] = vehicleArr[indexArr[0]].name;\n      trackObject[indexArr[1]][\"vehicleChecked\"] = true;\n\n      vehicleArr[indexArr[0]].total_no =\n        this.state.vehicleArr[indexArr[0]].total_no - 1;\n      if (oldVehicleIndex) {\n        vehicleArr[oldVehicleIndex].total_no =\n          this.state.vehicleArr[oldVehicleIndex].total_no + 1;\n      }\n\n      this.setState(\n        {\n          vehicleArr,\n          trackObject\n        },\n        this.calculateDistance\n      );\n    } else {\n      this.props.displayNotification(\n        `Planet's distance is more then vehicle's max distance`\n      );\n    }\n  }\n\n  //method to add filter component\n  renderFilter() {\n    let appGrid = [];\n    for (let i = 0; i < this.state.columnCount; i++) {\n      appGrid.push(\n        <FilterBox\n          key={i}\n          planetsArr={this.state.planetsArr}\n          vehicleArr={this.state.vehicleArr}\n          selectPlanete={this.selectPlanete}\n          trackObject={this.state.trackObject}\n          selectVehicle={this.selectVehicle}\n          parentIndex={i}\n          resetApp={this.props.resetApp}\n        ></FilterBox>\n      );\n    }\n    return appGrid;\n  }\n  // calculate the total distance and enable submit button\n\n  calculateDistance() {\n    let disabled = true;\n    let counter = 0;\n    let { trackObject, planetsArr, vehicleArr, distance } = this.state;\n    let distanceTotal = 0;\n    Object.keys(trackObject).map((item, index) => {\n      if (trackObject[item].vehicle && trackObject[item].planet) {\n        let vehicleSpeed = vehicleArr[trackObject[item].vehicle].speed;\n        let planetDistance = planetsArr[trackObject[item].planet].distance;\n        distanceTotal = distanceTotal + planetDistance / vehicleSpeed;\n        counter++;\n      }\n    });\n    distance.total = distanceTotal;\n    if (counter === this.state.columnCount) {\n      disabled = false;\n    }\n    this.setState({ disabled, distance });\n  }\n  renderResult(result) {\n    return (\n      <div className=\"text-center col-sm-12\">\n        {result.status && result.status !== \"false\" ? (\n          <React.Fragment>\n            <h5>\n              Success! Congratulations on Finding Falcon. King Shan is mighty\n              pleased.\n            </h5>\n            <h5>{`Time Taken: ${this.state.distance.total}`}</h5>\n            <h5>{`Planet found: ${result.planet_name}`}</h5>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <h5>Could not not found, try again.</h5>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n  render() {\n    let { vehicleArr, planetsArr, distance, disabled } = this.state;\n    return (\n      <div className=\"row\">\n        {this.props.result ? (\n          this.renderResult(this.props.result)\n        ) : (\n          <React.Fragment>\n            <div className=\"col-sm-12\">\n              <h3 className=\"text-center\">\n                Select Planes You Want To Search In\n              </h3>\n            </div>\n            {vehicleArr.length > 0 && planetsArr.length > 0 ? (\n              <React.Fragment>\n                {this.renderFilter()}\n                <div className=\"col-sm\">\n                  <h4>Time Taken:{distance.total}</h4>\n                </div>\n                <div className=\"col-sm-12 text-center\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-success\"\n                    disabled={disabled}\n                    onClick={e =>\n                      this.props.submitResult(this.state.trackObject)\n                    }\n                  >\n                    Find Falcon!\n                  </button>\n                </div>\n              </React.Fragment>\n            ) : (\n              <div className=\"col-sm-12 text-center\">\n                <h5>\"Loading ...\"</h5>\n              </div>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    planetsArr: state.appsData.planetsArr,\n    vehicleArr: state.appsData.vehicleArr,\n    resetApp: state.appsData.resetApp,\n    result: state.appsData.result\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      getPlanetesData: getPlanetesData,\n      getVehcleData: getVehcleData,\n      displayNotification: displayNotification,\n      resetAppFn: resetAppFn,\n      submitResult: submitResult\n    },\n    dispatch\n  );\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppContainer);\n","import React from \"react\";\n\nconst Notification = props => {\n  let { position } = props;\n  return (\n    <div className={`toast fade show ${position}`}>\n      <div className=\"toast-header\">\n        <span className=\"bg-danger rounded\"></span>Notification\n      </div>\n      <div className=\"toast-body\">{props.notification}</div>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { resetAppFn } from \"./../actions/getDataAction\";\nimport { bindActionCreators } from \"redux\";\n\nimport Notification from \"./Notification\";\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"App-header shadow-sm p-3 mb-5 bg-white\">\n        <div className=\"container\">\n          <ul className=\"nav justify-content-end headerNav\">\n            <li>\n              <span\n                onClick={e => this.props.resetAppFn(true)}\n                className=\"text-success resetLink\"\n              >\n                Reset\n              </span>\n            </li>\n            <li>\n              <a href=\"https://www.geektrust.in/\" className=\"text-success\">\n                Geek Trust Home\n              </a>\n            </li>\n          </ul>\n        </div>\n        {this.props.notification && (\n          <Notification notification={this.props.notification} />\n        )}\n      </header>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    notification: state.appsData.notificationObject\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      resetAppFn: resetAppFn\n    },\n    dispatch\n  );\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport \"./App.css\";\nimport Appcontainer from \"./components/AppContainer\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div>\n      <Header></Header>\n      <div className=\"container\">\n        <h1 className=\"text-center\">Finding Falcone!</h1>\n        <Appcontainer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import * as types from \"../actions/types\";\nlet initialData = {\n  planetsArr: [],\n  vehicleArr: [],\n  mixObject: {},\n  trackObject: {},\n  notificationObject: \"\",\n  resetApp: false,\n  result: null\n};\n\nconst appReducer = (state = initialData, action) => {\n  let { trackObject, result } = state;\n  switch (action.type) {\n    case types.STORE_PLANETS_DATA:\n      return Object.assign({}, state, {\n        planetsArr: [...action.payload]\n      });\n    case types.STORE_VEHICLE_DATA:\n      return Object.assign({}, state, {\n        vehicleArr: [...action.payload]\n      });\n    case types.SHOW_NOTIFICATION:\n      return Object.assign({}, state, { notificationObject: action.payload });\n    case types.RESET_APP:\n      if (action.payload) {\n        trackObject = {};\n        result = null;\n      }\n      return Object.assign({}, state, {\n        resetApp: action.payload,\n        trackObject,\n        result\n      });\n    // case types.SELECT_PLANET:\n    //   trackObject = state.trackObject;\n    //   let flattenArr = action.payload.split(\"-\");\n    //   if (!trackObject[flattenArr[1]]) {\n    //     trackObject[flattenArr[1]] = {};\n    //   }\n    //   //let vehicleArrIndex = trackObject[flattenArr[1]].vehicle;\n    //   if (flattenArr[0]) {\n    //     trackObject[flattenArr[1]][\"planet\"] = flattenArr[0];\n    //     trackObject[flattenArr[1]][\"planetValue\"] = action.payload;\n    //   } else {\n    //     trackObject[flattenArr[1]][\"planet\"] = \"\";\n    //     trackObject[flattenArr[1]][\"vehicle\"] = \"\";\n    //     trackObject[flattenArr[1]][\"planetValue\"] = \"\";\n    //     // if (vehicleArrIndex) {\n    //     //   vehicleArr[vehicleArrIndex].total_no =\n    //     //     this.props.vehicleArr[vehicleArrIndex].total_no + 1;\n    //     // }\n    //   }\n    //   return Object.assign({}, state, { trackObject: trackObject });\n    // case types.SELECT_VEHICLE:\n    //   trackObject = state.trackObject;\n    //   let indexArr = action.payload;\n    //   trackObject[indexArr[1]][\"vehicle\"] = indexArr[0];\n    //   trackObject[indexArr[1]][\"vehicleChecked\"] = true;\n    //   return Object.assign({}, state, { trackObject: trackObject });\n    case types.GOT_RESULT:\n      return Object.assign({}, state, { result: action.payload });\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./planeteReducer\";\nconst totalReducer = combineReducers({\n  appsData: appReducer\n});\n\nconst rootReducer = (state, action) => {\n  return totalReducer(state, action);\n};\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./../reducer/index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n//import { composeWithDevTools } from \"redux-devtools-extension\";\nconst middlewares = [];\n\nmiddlewares.push(thunk);\nif (process.env.NODE_ENV === `development`) {\n  //const { logger } = require(`redux-logger`);\n  //middlewares.push(logger);\n}\n\n//const store = createStore(rootReducer, applyMiddleware(...middlewares));\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}