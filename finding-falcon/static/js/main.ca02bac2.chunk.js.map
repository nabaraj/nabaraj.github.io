{"version":3,"sources":["actions/types.js","service/url.js","service/request.js","actions/getDataAction.js","components/PlanetsSelect.js","components/VehicleSelect.js","components/FilterBox.js","components/AppContainer.js","components/Notification.js","components/Header.js","App.js","reducer/planeteReducer.js","reducer/index.js","store/store.js","index.js"],"names":["STORE_PLANETS_DATA","STORE_VEHICLE_DATA","SHOW_NOTIFICATION","RESET_APP","GOT_RESULT","parentUrl","urlMapping","planet","vehicle","token","find","defaultOption","method","requestApi","options","finalOptions","Object","assign","axiosInstance","axios","catch","error","response","status","getPlanetesData","dispatch","url","then","result","data","map","item","index","type","payload","displayNotification","console","log","getVehcleData","clearTimeout","timer","setTimeout","resetAppFn","submitResult","trackObject","tokenOption","headers","Accept","planet_names","vehicle_names","keys","push","planetName","vehicleName","postFindOption","PlanetsSelect","props","state","filteredPlanets","selectedValue","filterPlanets","bind","clearSelect","displayValue","removeSelect","showLists","node","React","createRef","document","addEventListener","this","removeEventListener","nextProps","resetApp","setState","e","inputText","target","value","planetsArr","filter","name","toLowerCase","includes","current","contains","itemIndex","selectPlanete","parentIndex","className","ref","onClick","list","onChange","placeholder","autoComplete","onFocus","length","href","key","disabled","preventDefault","orgIndex","Component","VehicleSelect","vehicleArr","checked","radioId","split","join","parseInt","vehicleChecked","selectVehicle","total_no","id","htmlFor","FilterBox","AppContainer","distance","total","columnCount","renderFilter","calculateDistance","renderResult","JSON","parse","stringify","selectedPlanet","flattenArr","vehicleArrIndex","currentIndex","indexArr","oldVehicleIndex","planetIndex","max_distance","appGrid","i","counter","distanceTotal","vehicleSpeed","speed","planetDistance","Fragment","planet_name","connect","appsData","bindActionCreators","Notification","position","notification","Header","notificationObject","App","initialData","mixObject","appReducer","action","types","totalReducer","combineReducers","rootReducer","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ca02bac2.chunk.js","sourcesContent":["export const STORE_PLANETS_DATA = \"STORE_PLANETS_DATA\";\nexport const STORE_VEHICLE_DATA = \"STORE_VEHICLE_DATA\";\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const RESET_APP = \"RESET_APP\";\nexport const GOT_RESULT = \"GOT_RESULT\";\n","const parentUrl = \"https://findfalcone.herokuapp.com\";\nexport const urlMapping = {\n  planet: `${parentUrl}/planets`,\n  vehicle: `${parentUrl}/vehicles`,\n  token: `${parentUrl}/token`,\n  find: `${parentUrl}/find`\n};\n\n// https://findfalcone.herokuapp.com/token\n// https://findfalcone.herokuapp.com/find\n","\nimport axios from 'axios';\nconst defaultOption = {\n    //timeout:1000*20,\n    method: \"POST\"\n  };\nexport const requestApi = function(options) {\n    let finalOptions = Object.assign({}, defaultOption, options);\n    let axiosInstance = axios(finalOptions);\n    axiosInstance.catch(error => {\n      if (error && error.response && error.response.status === 401) {\n        //window.location.reload();\n        \n      }\n    });\n    //axios.cancel(requestId);\n    return axiosInstance;\n  };","import {\n  STORE_PLANETS_DATA,\n  STORE_VEHICLE_DATA,\n  SHOW_NOTIFICATION,\n  RESET_APP,\n  GOT_RESULT\n} from \"./types\";\nimport { urlMapping } from \"./../service/url\";\nimport { requestApi } from \"./../service/request\";\n\nexport function getPlanetesData() {\n  return dispatch => {\n    let options = {\n      method: \"GET\",\n      url: urlMapping[\"planet\"]\n    };\n    requestApi(options)\n      .then(result => {\n        result.data.map((item, index) => (item[\"orgIndex\"] = index));\n        dispatch({ type: STORE_PLANETS_DATA, payload: result.data });\n      })\n      .catch(error => {\n        this.displayNotification(\"Please try agin letter\");\n        console.log(error);\n      });\n  };\n}\nexport function getVehcleData() {\n  return dispatch => {\n    let options = {\n      method: \"GET\",\n      url: urlMapping[\"vehicle\"]\n    };\n    requestApi(options)\n      .then(result => {\n        dispatch({ type: STORE_VEHICLE_DATA, payload: result.data });\n      })\n      .catch(error => {\n        this.displayNotification(\"Please try agin letter\");\n        console.log(error);\n      });\n  };\n}\n\nexport function displayNotification(data) {\n  return dispatch => {\n    let timer;\n    clearTimeout(timer);\n    dispatch({ type: SHOW_NOTIFICATION, payload: data });\n\n    setTimeout(() => {\n      dispatch({ type: SHOW_NOTIFICATION, payload: \"\" });\n    }, 3000);\n  };\n}\n\nexport function resetAppFn(data) {\n  return dispatch => {\n    dispatch({ type: RESET_APP, payload: data });\n  };\n}\n//first getting token and onsuccess sending game results\nexport function submitResult(trackObject) {\n  return dispatch => {\n    let tokenOption = {\n      url: urlMapping[\"token\"],\n      method: \"POST\",\n      headers: { Accept: \"application/json\" }\n    };\n    requestApi(tokenOption).then(result => {\n      let planet_names = [],\n        vehicle_names = [];\n      Object.keys(trackObject).map((item, index) => {\n        planet_names.push(trackObject[item].planetName);\n        vehicle_names.push(trackObject[item].vehicleName);\n      });\n      let postFindOption = {\n        url: urlMapping[\"find\"],\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        data: {\n          token: result.data.token,\n          planet_names,\n          vehicle_names\n        }\n      };\n      requestApi(postFindOption).then(result => {\n        dispatch({ type: GOT_RESULT, payload: result.data });\n      });\n    });\n  };\n}\n","import React, { Component } from \"react\";\n\nclass PlanetsSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredPlanets: [],\n      selectedValue: \"\"\n    };\n    this.filterPlanets = this.filterPlanets.bind(this);\n    this.clearSelect = this.clearSelect.bind(this);\n    this.displayValue = this.displayValue.bind(this);\n    this.removeSelect = this.removeSelect.bind(this);\n    this.showLists = this.showLists.bind(this);\n    //this.node = useRef();\n    this.node = React.createRef();\n  }\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.clearSelect);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.clearSelect);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.resetApp) {\n      this.setState({\n        filteredPlanets: [],\n        selectedValue: \"\"\n      });\n    }\n  }\n  filterPlanets(e) {\n    let inputText = e.target.value;\n    let filteredPlanets = this.props.planetsArr.filter((item, index) => {\n      return item.name.toLowerCase().includes(inputText);\n    });\n    this.setState({\n      filteredPlanets\n    });\n  }\n  clearSelect(e) {\n    if (!this.node.current.contains(e.target)) {\n      this.setState({\n        filteredPlanets: []\n      });\n    }\n  }\n  displayValue(value, itemIndex) {\n    this.setState({\n      selectedValue: value,\n      filteredPlanets: []\n    });\n    this.props.selectPlanete(itemIndex);\n  }\n  removeSelect() {\n    this.setState({\n      selectedValue: \"\"\n    });\n\n    this.props.selectPlanete(`-${this.props.parentIndex}`);\n  }\n  showLists() {\n    let filteredPlanets = this.props.planetsArr;\n    this.setState({\n      filteredPlanets\n    });\n  }\n  render() {\n    let { parentIndex, trackObject } = this.props;\n    let { filteredPlanets, selectedValue } = this.state;\n\n    return (\n      <div className=\"form-group autoComplete\" ref={this.node}>\n        {selectedValue ? (\n          <div className=\"form-control tagContainer\">\n            <span className=\"badge badge-primary\">\n              {selectedValue}\n              <span className=\"badge badge-light\" onClick={this.removeSelect}>\n                X\n              </span>\n            </span>\n          </div>\n        ) : (\n          <input\n            list=\"planetsLists\"\n            name=\"myBrowser\"\n            onChange={this.filterPlanets}\n            placeholder=\"Search Planets\"\n            className=\"form-control\"\n            autoComplete=\"off\"\n            onFocus={this.showLists}\n          />\n        )}\n\n        {filteredPlanets.length > 0 && (\n          <div className=\"list-group\">\n            {filteredPlanets.map((item, index) => {\n              return (\n                <a\n                  href=\"#\"\n                  key={`${item.name}-${index}`}\n                  value={`${item.name}`}\n                  className={`list-group-item list-group-item-action${\n                    item.disabled ? \" disabled\" : \"\"\n                  }`}\n                  onClick={e => {\n                    e.preventDefault();\n                    this.displayValue(\n                      item.name,\n                      `${item.orgIndex}-${parentIndex}`\n                    );\n                  }}\n                >\n                  {item.name}\n                </a>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PlanetsSelect;\n","import React, { Component } from \"react\";\n\nclass VehicleSelect extends Component {\n  render() {\n    let { vehicleArr, parentIndex, trackObject } = this.props;\n    return (\n      <div>\n        <ul className=\"list-unstyled\">\n          {vehicleArr.map((item, index) => {\n            let checked = false;\n            let radioId = `${item.name\n              .toLowerCase()\n              .split(\" \")\n              .join(\"-\")}-${parentIndex}`;\n            if (\n              index === parseInt(trackObject[parentIndex].vehicle) &&\n              trackObject[parentIndex].vehicleChecked\n            ) {\n              checked = true;\n            }\n            return (\n              <li key={item.name} className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  value={`${index}-${parentIndex}`}\n                  name={`radio-${parentIndex}`}\n                  onChange={this.props.selectVehicle}\n                  disabled={item.total_no === 0 ? true : false}\n                  id={`${radioId}`}\n                  checked={checked}\n                />\n                <label htmlFor={`${radioId}`} className=\"form-check-label\">\n                  {item.name}({item.total_no})\n                </label>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default VehicleSelect;\n","import React, { Component } from \"react\";\nimport PlanetsSelect from \"./PlanetsSelect\";\nimport VehicleSelect from \"./VehicleSelect\";\n\nclass FilterBox extends Component {\n  render() {\n    let { trackObject, parentIndex } = this.props;\n    //console.log(trackObject[parentIndex]);\n    return (\n      <div className=\"col-sm\">\n        <PlanetsSelect {...this.props}></PlanetsSelect>\n        {trackObject[parentIndex] && trackObject[parentIndex][\"planet\"] && (\n          <VehicleSelect {...this.props}></VehicleSelect>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default FilterBox;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getPlanetesData,\n  getVehcleData,\n  displayNotification,\n  resetAppFn,\n  submitResult\n} from \"./../actions/getDataAction\";\nimport { bindActionCreators } from \"redux\";\nimport FilterBox from \"./FilterBox\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vehicleArr: [],\n      planetsArr: [],\n      trackObject: {},\n      distance: { total: 0 },\n      columnCount: 4,\n      disabled: true\n    };\n    this.renderFilter = this.renderFilter.bind(this);\n    this.selectPlanete = this.selectPlanete.bind(this);\n    this.selectVehicle = this.selectVehicle.bind(this);\n    this.calculateDistance = this.calculateDistance.bind(this);\n    this.renderResult = this.renderResult.bind(this);\n  }\n  componentDidMount() {\n    this.props.getPlanetesData();\n    this.props.getVehcleData();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.planetsArr !== this.props.planetsArr) {\n      this.setState({\n        planetsArr: JSON.parse(JSON.stringify(nextProps.planetsArr))\n      });\n    }\n    if (nextProps.vehicleArr !== this.props.vehicleArr) {\n      this.setState({\n        vehicleArr: JSON.parse(JSON.stringify(nextProps.vehicleArr))\n      });\n    }\n    if (nextProps.resetApp === true) {\n      let planetsArr = JSON.parse(JSON.stringify(this.props.planetsArr));\n      let vehicleArr = JSON.parse(JSON.stringify(this.props.vehicleArr));\n      this.setState(\n        {\n          distance: { total: 0 },\n          planetsArr: planetsArr,\n          vehicleArr: vehicleArr,\n          trackObject: {}\n        },\n        () => {\n          this.calculateDistance();\n          this.props.resetAppFn(false);\n        }\n      );\n    }\n    //return null;\n  }\n  /**  \n    reset vehicleArr if default value is selected\n    calculate distance\n  * @param {String} selectedPlanet - selected planet index and parent filterbox index\n  */\n  selectPlanete(selectedPlanet) {\n    let { planetsArr, vehicleArr, trackObject } = this.state;\n    let flattenArr = selectedPlanet.split(\"-\");\n\n    //assign empty object to trackObject with parent index for first time\n    if (!trackObject[flattenArr[1]]) {\n      trackObject[flattenArr[1]] = {};\n    }\n\n    let vehicleArrIndex = trackObject[flattenArr[1]]\n      ? trackObject[flattenArr[1]].vehicle\n      : null;\n\n    trackObject[flattenArr[1]][\"planet\"] = flattenArr[0] ? flattenArr[0] : \"\";\n    trackObject[flattenArr[1]][\"planetName\"] = flattenArr[0]\n      ? planetsArr[flattenArr[0]].name\n      : \"\";\n\n    trackObject[flattenArr[1]][\"vehicle\"] = \"\";\n\n    //update vehicle quantity after each select planet\n    if (vehicleArrIndex) {\n      vehicleArr[vehicleArrIndex].total_no =\n        vehicleArr[vehicleArrIndex].total_no + 1 >\n        this.props.vehicleArr[vehicleArrIndex].total_no\n          ? this.props.vehicleArr[vehicleArrIndex].total_no\n          : vehicleArr[vehicleArrIndex].total_no + 1;\n    }\n    trackObject[flattenArr[1]][\"planetValue\"] = selectedPlanet;\n    //this.props.updateTrackerPlanet(e.target.value);\n\n    planetsArr.map((item, index) => {\n      if (index === parseInt(flattenArr[0])) {\n        item.disabled = true;\n        item.currentIndex = flattenArr[1];\n      } else {\n        if (item.currentIndex === flattenArr[1]) {\n          item.disabled = false;\n          item.currentIndex = \"\";\n        }\n      }\n      return item;\n    });\n\n    //}\n    this.setState(\n      {\n        planetsArr,\n        trackObject,\n        vehicleArr\n      },\n      this.calculateDistance\n    );\n  }\n\n  /** \n   on select vehicle update the total vahicle count in vehicleArr\n   check max_distance and planet distance\n   update trackObject vehicle and vehicleChecked\n   calculate distance\n   @param {Object} vehicle- selected vehicle index and parent filterbox index\n   \n*/\n  selectVehicle(e) {\n    let indexArr = e.target.value.split(\"-\");\n    let { vehicleArr, planetsArr, trackObject } = this.state;\n\n    let oldVehicleIndex = trackObject[indexArr[1]][\"vehicle\"] || \"\";\n    let planetIndex = trackObject[indexArr[1]][\"planet\"];\n    let max_distance = vehicleArr[indexArr[0]].max_distance;\n    let planetDistance = planetsArr[planetIndex].distance;\n    if (max_distance >= planetDistance) {\n      trackObject[indexArr[1]][\"vehicle\"] = indexArr[0];\n      trackObject[indexArr[1]][\"vehicleName\"] = vehicleArr[indexArr[0]].name;\n      trackObject[indexArr[1]][\"vehicleChecked\"] = true;\n\n      vehicleArr[indexArr[0]].total_no =\n        this.state.vehicleArr[indexArr[0]].total_no - 1;\n      if (oldVehicleIndex) {\n        vehicleArr[oldVehicleIndex].total_no =\n          this.state.vehicleArr[oldVehicleIndex].total_no + 1;\n      }\n\n      this.setState(\n        {\n          vehicleArr,\n          trackObject\n        },\n        this.calculateDistance\n      );\n    } else {\n      this.props.displayNotification(\n        `Planet's distance is more then vehicle's max distance`\n      );\n    }\n  }\n\n  //method to add filter component\n  renderFilter() {\n    let appGrid = [];\n    for (let i = 0; i < this.state.columnCount; i++) {\n      appGrid.push(\n        <FilterBox\n          key={i}\n          planetsArr={this.state.planetsArr}\n          vehicleArr={this.state.vehicleArr}\n          selectPlanete={this.selectPlanete}\n          trackObject={this.state.trackObject}\n          selectVehicle={this.selectVehicle}\n          parentIndex={i}\n          resetApp={this.props.resetApp}\n        ></FilterBox>\n      );\n    }\n    return appGrid;\n  }\n\n  /* \n  calculate the total distance and enable submit button\n  will check all filter box planet and vehicle selected \n*/\n  calculateDistance() {\n    let disabled = true;\n    let counter = 0;\n    let { trackObject, planetsArr, vehicleArr, distance } = this.state;\n    let distanceTotal = 0;\n    Object.keys(trackObject).map((item, index) => {\n      if (trackObject[item].vehicle && trackObject[item].planet) {\n        let vehicleSpeed = vehicleArr[trackObject[item].vehicle].speed;\n        let planetDistance = planetsArr[trackObject[item].planet].distance;\n        distanceTotal = distanceTotal + planetDistance / vehicleSpeed;\n        counter++;\n      }\n    });\n    distance.total = distanceTotal;\n    if (counter === this.state.columnCount) {\n      disabled = false;\n    }\n    this.setState({ disabled, distance });\n  }\n\n  /**\n   * display result for find end point\n   * handle false result\n   * @param {object} result -  got from find end poin\n   */\n  renderResult(result) {\n    return (\n      <div className=\"text-center col-sm-12\">\n        {result.status && result.status !== \"false\" ? (\n          <React.Fragment>\n            <h5>\n              Success! Congratulations on Finding Falcon. King Shan is mighty\n              pleased.\n            </h5>\n            <h5>{`Time Taken: ${this.state.distance.total}`}</h5>\n            <h5>{`Planet found: ${result.planet_name}`}</h5>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <h5>Could not found, try again.</h5>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n  render() {\n    let { vehicleArr, planetsArr, distance, disabled } = this.state;\n    return (\n      <div className=\"row\">\n        {this.props.result ? (\n          this.renderResult(this.props.result)\n        ) : (\n          <React.Fragment>\n            <div className=\"col-sm-12\">\n              <h3 className=\"text-center\">\n                Select Planes You Want To Search In\n              </h3>\n            </div>\n            {vehicleArr.length > 0 && planetsArr.length > 0 ? (\n              <React.Fragment>\n                {/* render filter box start */}\n                {this.renderFilter()}\n                {/* render filter box end */}\n\n                <div className=\"col-sm\">\n                  <h4>Time Taken:{distance.total}</h4>\n                </div>\n                {/* button container */}\n                <div className=\"col-sm-12 text-center\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-success\"\n                    disabled={disabled}\n                    onClick={e =>\n                      this.props.submitResult(this.state.trackObject)\n                    }\n                  >\n                    Find Falcon!\n                  </button>\n                </div>\n                {/* button container */}\n              </React.Fragment>\n            ) : (\n              <div className=\"col-sm-12 text-center\">\n                <h5>\"Loading ...\"</h5>\n              </div>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    planetsArr: state.appsData.planetsArr,\n    vehicleArr: state.appsData.vehicleArr,\n    resetApp: state.appsData.resetApp,\n    result: state.appsData.result\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      getPlanetesData: getPlanetesData,\n      getVehcleData: getVehcleData,\n      displayNotification: displayNotification,\n      resetAppFn: resetAppFn,\n      submitResult: submitResult\n    },\n    dispatch\n  );\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppContainer);\n","import React from \"react\";\n\nconst Notification = props => {\n  let { position } = props;\n  return (\n    <div className={`toast fade show ${position}`}>\n      <div className=\"toast-header\">\n        <span className=\"bg-danger rounded\"></span>Notification\n      </div>\n      <div className=\"toast-body\">{props.notification}</div>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { resetAppFn } from \"./../actions/getDataAction\";\nimport { bindActionCreators } from \"redux\";\n\nimport Notification from \"./Notification\";\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"App-header shadow-sm p-3 mb-2 bg-gradient-dark text-light fixed-top\">\n        <nav className=\"container\">\n          <ul className=\"nav justify-content-end headerNav\">\n            <li>\n              <span\n                onClick={e => this.props.resetAppFn(true)}\n                className=\"text-success resetLink\"\n              >\n                Reset\n              </span>\n            </li>\n            <li>\n              <a href=\"https://www.geektrust.in/\" className=\"text-success\">\n                Geek Trust Home\n              </a>\n            </li>\n          </ul>\n        </nav>\n        {this.props.notification && (\n          <Notification notification={this.props.notification} />\n        )}\n      </header>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    notification: state.appsData.notificationObject\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      resetAppFn: resetAppFn\n    },\n    dispatch\n  );\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport \"./App.css\";\nimport Appcontainer from \"./components/AppContainer\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div>\n      <Header></Header>\n      <main className=\"container\">\n        <h1 className=\"text-center\">Finding Falcone!</h1>\n        <Appcontainer />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import * as types from \"../actions/types\";\nlet initialData = {\n  planetsArr: [],\n  vehicleArr: [],\n  mixObject: {},\n  trackObject: {},\n  notificationObject: \"\",\n  resetApp: false,\n  result: null\n};\n\nconst appReducer = (state = initialData, action) => {\n  let { trackObject, result } = state;\n  switch (action.type) {\n    case types.STORE_PLANETS_DATA:\n      return Object.assign({}, state, {\n        planetsArr: [...action.payload]\n      });\n    case types.STORE_VEHICLE_DATA:\n      return Object.assign({}, state, {\n        vehicleArr: [...action.payload]\n      });\n    case types.SHOW_NOTIFICATION:\n      return Object.assign({}, state, { notificationObject: action.payload });\n    case types.RESET_APP:\n      if (action.payload) {\n        trackObject = {};\n        result = null;\n      }\n      return Object.assign({}, state, {\n        resetApp: action.payload,\n        trackObject,\n        result\n      });\n    // case types.SELECT_PLANET:\n    //   trackObject = state.trackObject;\n    //   let flattenArr = action.payload.split(\"-\");\n    //   if (!trackObject[flattenArr[1]]) {\n    //     trackObject[flattenArr[1]] = {};\n    //   }\n    //   //let vehicleArrIndex = trackObject[flattenArr[1]].vehicle;\n    //   if (flattenArr[0]) {\n    //     trackObject[flattenArr[1]][\"planet\"] = flattenArr[0];\n    //     trackObject[flattenArr[1]][\"planetValue\"] = action.payload;\n    //   } else {\n    //     trackObject[flattenArr[1]][\"planet\"] = \"\";\n    //     trackObject[flattenArr[1]][\"vehicle\"] = \"\";\n    //     trackObject[flattenArr[1]][\"planetValue\"] = \"\";\n    //     // if (vehicleArrIndex) {\n    //     //   vehicleArr[vehicleArrIndex].total_no =\n    //     //     this.props.vehicleArr[vehicleArrIndex].total_no + 1;\n    //     // }\n    //   }\n    //   return Object.assign({}, state, { trackObject: trackObject });\n    // case types.SELECT_VEHICLE:\n    //   trackObject = state.trackObject;\n    //   let indexArr = action.payload;\n    //   trackObject[indexArr[1]][\"vehicle\"] = indexArr[0];\n    //   trackObject[indexArr[1]][\"vehicleChecked\"] = true;\n    //   return Object.assign({}, state, { trackObject: trackObject });\n    case types.GOT_RESULT:\n      return Object.assign({}, state, { result: action.payload });\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./planeteReducer\";\nconst totalReducer = combineReducers({\n  appsData: appReducer\n});\n\nconst rootReducer = (state, action) => {\n  return totalReducer(state, action);\n};\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./../reducer/index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n//import { composeWithDevTools } from \"redux-devtools-extension\";\nconst middlewares = [];\n\nmiddlewares.push(thunk);\nif (process.env.NODE_ENV === `development`) {\n  //const { logger } = require(`redux-logger`);\n  //middlewares.push(logger);\n}\n\n//const store = createStore(rootReducer, applyMiddleware(...middlewares));\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}